library(dplyr)
library(ggplot2)
library(readxl)  

dFC_df <- read.csv("transmean.csv")

dFC_df$src_subject_id <- gsub("sub-HCP", "", dFC_df$src_subject_id)

cog_df <- read_excel("cogcomp01.xlsx")

cog_df$src_subject_id <- gsub("sub-HCP", "", cog_df$src_subject_id)

cog_df[cog_df==999]=NA

new_df=merge(cog_df, dFC_df, by = "src_subject_id")

transdis_columns <- c("X1t1", "X1t2", "X1t3", "X1t4", "X1t5", "X1t6", "X2t1", "X2t2", "X2t3", "X2t4", "X2t5", "X2t6",
                      "X3t1", "X3t2", "X3t3", "X3t4", "X3t5", "X3t6", "X4t1", "X4t2", "X4t3", "X4t4", "X4t5", "X4t6",
                      "X5t1", "X5t2", "X5t3", "X5t4", "X5t5", "X5t6", "X6t1", "X6t2", "X6t3", "X6t4", "X6t5", "X6t6")
ntransdis=length(transdis_columns)

cognition_columns <- c("Fluid Cognition Composite Score Age Adjusted",
                       "Crystal Cognition Composite Score Age adjusted",
                       "Total Cognition Composite Score Age adjusted")

ncog=length(cognition_columns)



#Define values.
val_pred <- transdis_columns

#For each value.
for (val_lab in val_pred) {

  na_indicator=is.na(new_df[,val_lab])

  #Produce residuals.
  inform <- as.formula(paste0(val_lab,'~',"Age"))
  respred <- resid(lm(inform,data=new_df[!na_indicator,]))

  #Replace.
  new_df[!na_indicator,val_lab] <- respred
}


str(new_df)

plots <-data.frame(matrix(NA,ntransdis,ncog))
rownames(plots)=transdis_columns
colnames(plots)=cognition_columns 
plots_p=plots

for (cog in cognition_columns) {
  for (transdis in transdis_columns) {
    corr_value <- cor(new_df[,cog], new_df[,transdis], use = "complete.obs")
    corr_p <- cor.test(new_df[,cog], new_df[,transdis], use = "complete.obs")$p.value
    
    plots[transdis,cog]=corr_value
    plots_p[transdis,cog]=corr_p
  }
}

print(plots[[1]]) 
write.csv(plots, file = "/Users/ifrahismail/Downloads/plots.csv", row.names = TRUE)

p_values_df <- as.data.frame(plots_p)
p_values_vec <- c(p_values_df[,"Fluid Cognition Composite Score Age Adjusted"],p_values_df[,"Crystal Cognition Composite Score Age adjusted"],
                  p_values_df[,"Total Cognition Composite Score Age adjusted"])

p_sig=p_values_vec
p_sig[p_sig>=0.05]=NA

names(p_sig)=c(paste0("F_",transdis_columns),paste0("C_",transdis_columns),paste0("T_",transdis_columns))

adjusted_p_values <- p.adjust(p_values_vec, method = "BH")
adjusted_p_sig <- adjusted_p_values
adjusted_p_sig[adjusted_p_sig>=0.05]=NA
